---
type buttonVariant = "default" | "secondary" | "ghost";

const sharedClasses =
  "rounded-lg px-6 py-3 font-medium border border-transparent transition-colors";

const buttonVariantsClassNames: Record<buttonVariant, string> = {
  default: "bg-primary text-white hover:bg-primary/90",
  secondary:
    "bg-secondary text-primary border border-primary hover:bg-secondary/90",
  ghost: "bg-transparent text-primary hover:border-primary"
};

interface Props {
  variant?: buttonVariant;
  asElement?: "button" | "a";
  href?: string;
  extraClasses?: string;
}

const {
  variant = "default",
  asElement = "button",
  href = "#",
  extraClasses
} = Astro.props;
---

{
  asElement === "button" ? (
    <button
      class:list={[
        sharedClasses,
        buttonVariantsClassNames[variant],
        extraClasses
      ]}
    >
      <slot />
    </button>
  ) : (
    <a
      href={href}
      class:list={[
        sharedClasses,
        buttonVariantsClassNames[variant],
        extraClasses
      ]}
    >
      <slot />
    </a>
  )
}
